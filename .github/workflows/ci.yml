name: 'Run tests for ci cd'
on:
  push:
    branches: [ main ]
    tags:
      - "*"
  pull_request:
    branches: [ main ]

env:
  is_package: true # set this to true if you use this template for a package that you want to publish
  POETRY_VERSION: 1.8.3

jobs:
  prep-vars:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-vars.outputs.matrix }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - id: set-vars
        run: |
          echo "matrix={\"python-version\":${{ env.is_package && '[ \"3.9\", \"3.10\", \"3.11\", \"3.12\", ]' || '[ \"3.12\" ]' }} }" >> $GITHUB_OUTPUT
  test:
    runs-on: ubuntu-latest
    needs: prep-vars
    strategy:
      matrix: ${{fromJson(needs.prep-vars.outputs.matrix)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Install Dependencies
        run: poetry install
      - name: Run tests
        run: poetry run pytest -vv
  build-n-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref_type == 'tag'
    env:
      python-version: "3.10"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: setup python ${{ env.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python-version }}
          cache: 'poetry'
      - name: Install Dependencies
        run: poetry install
      - name: Set the right version
        run: poetry version ${{  github.ref_name }}
      - name: Build a binary wheel and a source tarball
        run: poetry build
      - name: Publish
        if: ${{env.is_package}}
        run: |
          poetry publish -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} -vv